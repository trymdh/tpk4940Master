import numpy as np 
from AT_cx_functions import*
A_1 = np.array([
    [-0.989992, -0.141120, 0.000000, 0.000000],
    [0.141120, -0.989992, 0.000000,0.000000],
    [0.000000,0.000000,1.000000,0.000000],
    [0.000000,0.000000,0.000000,1.000000]
    ])
A_2 = np.array([
    [0.070732, 0.000000, 0.997495, -400.000],
    [0.000000, 1.000000, 0.000000, 0.000000],
    [-0.997495,0.000000,0.070737,400.000],
    [0.000000,0.000000,0.000000,1.000000]
    ])
B_1 = np.array([
    [-0.989992, -0.138307, 0.028036, -26.9559],
    [0.138307, -0.911449, 0.38747,-96.1332],
    [-0.028036,0.387470,0.921456,19.4872],
    [0.000000,0.000000,0.000000,1.000000]
    ])
B_2 = np.array([
    [0.070737, 0.198172, 0.997612, -309.543],
    [-0.198172, 0.963323, -0.180936, 59.0244],
    [-0.977612, -0.180936, 0.107415, 291.177],
    [0.000000,0.000000,0.000000,1.000000]
    ])


A = [(A_1,B_1),(A_2,B_2)]
alpha_i = []
beta_i = []
for n in range(0,len(A)):
    A_i = A[n][0]
    R_iA = A_i[0:3,0:3];t_iA = A_i[0:3,3]
    B_i = A[n][1]
    R_iB = B_i[0:3,0:3];t_iB = B_i[0:3,3]
    alpha_i.append(logMatrix(R_iA))
    beta_i.append(logMatrix(R_iB))

alpha_i = np.asarray(alpha_i)
beta_i = np.asarray(beta_i)

M = np.zeros((3,3))
for i, a in enumerate(alpha_i):
    b = beta_i[i]
    M += M + b@a.T

print(np.linalg.det(M))
M_eig,nor_eig = np.linalg.eig(M.T@M)


